# 1. Build the image
docker-compose build

# 2. Start the container
docker-compose up -d

# 3. Access the app
# Open http://localhost:5002 in your browser

# 4. View logs
docker-compose logs -f

# 5. Stop the container
docker-compose down



Option 1: Access Through Windows Mount Point
If your network share is accessible as a drive letter (like Z:) or you can map it:

Map the network drive in Windows:

Open File Explorer
Right-click "This PC" â†’ "Map network drive"
Choose drive letter (e.g., Z:)
Enter \\SERVER\StyleImages




# Check what's inside the mounted directory
docker exec -it ijewelmatch ls -la /app/StyleImages

# If empty, check if the mount point exists
docker exec -it ijewelmatch ls -la /app/





# Create local directory
mkdir D:\GatiGithub\ijewelmatch\StyleImages

# Copy just one category for testing (EARRING folder)
xcopy Z:\EARRING D:\GatiGithub\ijewelmatch\StyleImages\EARRING /E /I /H /Y



docker exec -it ijewelmatch ls -la /app/StyleImages




# Check if images exist in the container
docker exec -it ijewelmatch find /app/StyleImages -type f -name "*.jpg" | head -20

# Check how many image files exist
docker exec -it ijewelmatch find /app/StyleImages -type f \( -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" \) | wc -l

# Check the logs during training
docker-compose logs | grep -i "inserted\|skipped\|index build"











sign up at https://hub.docker.com
docker login
docker tag ijewelmatch-ijewelmatch:latest gatisofttech20/ijewelmatch-ijewelmatch:latest
docker tag ijewelmatch-ijewelmatch:latest gatisofttech20/ijewelmatch:1.0
docker tag ijewelmatch-ijewelmatch:latest gatisofttech20/ijewelmatch-ijewelmatch:latest
docker push gatisofttech20/ijewelmatch-ijewelmatch:latest
docker push gatisofttech20/ijewelmatch:1.0


2387532







build_and_push.bat

@echo off
SET USERNAME=gatisofttech20
SET IMAGE_NAME=ijewelmatch
SET VERSION=1.0

echo Building Docker image...
docker-compose build

echo Tagging image...
docker tag %IMAGE_NAME%:latest %USERNAME%/%IMAGE_NAME%:latest
docker tag %IMAGE_NAME%:latest %USERNAME%/%IMAGE_NAME%:%VERSION%

echo Logging in to Docker Hub...
docker login

echo Pushing to Docker Hub...
docker push %USERNAME%/%IMAGE_NAME%:latest
docker push %USERNAME%/%IMAGE_NAME%:%VERSION%

echo Done!
pause








docker pull gatisofttech20/ijewelmatch:latest
docker-compose up -d




Don't include sensitive data: Your base_model.pkl and actual jewelry images won't be in the Docker image - they're mounted via volumes. Only the application code is included.
Image size: The PyTorch dependencies make the image large (~2-3GB). Push time will depend on your internet speed.
Private repositories: If you want to keep the image private, you'll need a Docker Hub paid plan, or use an alternative like:

GitHub Container Registry (free private repos)
AWS ECR
Google Container Registry
Azure Container Registry